// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Travel.Context.Models.Travel;

namespace Travel.Context.Migrations
{
    [DbContext(typeof(TravelContext))]
    partial class TravelContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Travel.Context.Models.Payment", b =>
                {
                    b.Property<int>("IdPayment")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NamePayment")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdPayment");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("Travel.Context.Models.TourBooking", b =>
                {
                    b.Property<string>("IdTourBooking")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<float>("AdditionalPrice")
                        .HasColumnType("real");

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("BookingNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("CheckIn")
                        .HasColumnType("bigint");

                    b.Property<long>("CheckOut")
                        .HasColumnType("bigint");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("DateBooking")
                        .HasColumnType("bigint");

                    b.Property<float>("Deposit")
                        .HasColumnType("real");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsCalled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSendFeedBack")
                        .HasColumnType("bit");

                    b.Property<long>("LastDate")
                        .HasColumnType("bigint");

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("ModifyDate")
                        .HasColumnType("bigint");

                    b.Property<string>("NameContact")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameCustomer")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PaymentId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("Pincode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<float>("RemainPrice")
                        .HasColumnType("real");

                    b.Property<string>("ScheduleId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<float>("TotalPrice")
                        .HasColumnType("real");

                    b.Property<float>("TotalPricePromotion")
                        .HasColumnType("real");

                    b.Property<string>("UrlQR")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ValuePromotion")
                        .HasColumnType("int");

                    b.Property<double>("Vat")
                        .HasColumnType("float");

                    b.Property<string>("VoucherCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("IdTourBooking");

                    b.HasIndex("PaymentId");

                    b.ToTable("TourBookings");
                });

            modelBuilder.Entity("Travel.Context.Models.TourBookingDetails", b =>
                {
                    b.Property<string>("IdTourBookingDetails")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Adult")
                        .HasColumnType("int");

                    b.Property<int>("Baby")
                        .HasColumnType("int");

                    b.Property<int>("Child")
                        .HasColumnType("int");

                    b.Property<Guid>("HotelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCalled")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("PlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RestaurantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("IdTourBookingDetails");

                    b.ToTable("tourBookingDetails");
                });

            modelBuilder.Entity("Travel.Context.Models.TourBooking", b =>
                {
                    b.HasOne("Travel.Context.Models.Payment", "Payment")
                        .WithMany("TourBooking")
                        .HasForeignKey("PaymentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("Travel.Context.Models.TourBookingDetails", b =>
                {
                    b.HasOne("Travel.Context.Models.TourBooking", "TourBooking")
                        .WithOne("TourBookingDetails")
                        .HasForeignKey("Travel.Context.Models.TourBookingDetails", "IdTourBookingDetails")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TourBooking");
                });

            modelBuilder.Entity("Travel.Context.Models.Payment", b =>
                {
                    b.Navigation("TourBooking");
                });

            modelBuilder.Entity("Travel.Context.Models.TourBooking", b =>
                {
                    b.Navigation("TourBookingDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
